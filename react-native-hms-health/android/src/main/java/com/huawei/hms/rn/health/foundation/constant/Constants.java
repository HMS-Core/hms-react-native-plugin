/*
    Copyright 2020. Huawei Technologies Co., Ltd. All rights reserved.

    Licensed under the Apache License, Version 2.0 (the "License")
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        https://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
*/

package com.huawei.hms.rn.health.foundation.constant;

import com.huawei.hms.hihealth.data.DataCollector;
import com.huawei.hms.hihealth.data.DataType;

import com.huawei.hms.hihealth.data.Field;
import com.huawei.hms.hihealth.data.Group;
import com.huawei.hms.hihealth.data.HealthDataTypes;
import com.huawei.hms.hihealth.data.HealthFields;
import com.huawei.hms.hihealth.data.SleepFragmentCategory;
import com.huawei.hms.hihealth.data.SleepState;
import com.huawei.hms.hihealth.data.SportDataTypes;
import com.huawei.hms.hihealth.data.SportFields;

import java.text.SimpleDateFormat;
import java.util.Collections;
import java.util.EnumSet;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.concurrent.TimeUnit;


/**
 * Base Constant Values.
 *
 * @since v.5.0.1
 */
public interface Constants {

    /**
     * Constant Variable Keys That Will be Used among RN Side.
     */
    String activityRecordIdKey = "activityRecordId";
    String nameKey = "name";
    String descriptionKey = "description";
    String activityTypeKey = "activityType";
    String startTimeKey = "startTime";
    String timeZoneKey = "timeZone";
    String endTimeKey = "endTime";
    String durationTimeKey = "durationTime";
    String samplingTimeKey = "samplingTime";
    String insertionTimeKey = "insertionTime";
    String timeUnitKey = "timeUnit";
    String dataTypeKey = "dataType";
    String isSuccessKey = "isSuccess";
    String errorMessageKey = "errorMessage";
    String resultBodyKey = "body";

    /**
     * {@link TimeConstants} used among converting time params from readableMaps
     * into Java Side.
     */
    enum TimeConstants {
        START,
        END,
        DURATION,
        SAMPLING,
        INSERTION
    }

    /**
     * {@link TimeUnit} types.
     */
    enum TimeUnitTypes {
        /* Time units */
        NANOSECONDS("NANOSECONDS", TimeUnit.NANOSECONDS),
        MICROSECONDS("MICROSECONDS", TimeUnit.MICROSECONDS),
        MILLISECONDS("MILLISECONDS", TimeUnit.MILLISECONDS),
        SECONDS("SECONDS", TimeUnit.SECONDS),
        MINUTES("MINUTES", TimeUnit.MINUTES),
        HOURS("HOURS", TimeUnit.HOURS),
        DAYS("DAYS", TimeUnit.DAYS);

        private final String value;
        private final TimeUnit type;

        TimeUnitTypes(String value, TimeUnit type) {
            this.value = value;
            this.type = type;
        }

        public String getValue() {
            return value;
        }

        public TimeUnit getTimeUnitType() {
            return type;
        }

        public static TimeUnitTypes fromString(String text) {
            for (TimeUnitTypes variable : TimeUnitTypes.values()) {
                if (variable.value.equalsIgnoreCase(text)) {
                    return variable;
                }
            }
            return null;
        }
    }

    /**
     * whole time unit constants variables as Map
     **/
    Map<String, Object> TIME_UNITS_MAP = initTimeUnitConstants();

    /**
     * Initializes TIME_UNIT Constants map.
     *
     * @return Map<String, Object> TIME_UNIT Constants
     */
    static Map<String, Object> initTimeUnitConstants() {
        Map<String, Object> constantMap = new HashMap<>();

        for (TimeUnitTypes variable : EnumSet.allOf(TimeUnitTypes.class)) {
            String key = variable.name();
            String value = variable.getValue();
            constantMap.put(key, value);
        }

        return Collections.unmodifiableMap(constantMap);
    }

    /**
     * All the DataController constants.
     */
    enum DataTypeConstants {
        /* Data Types */
        DT_UNUSED_DATA_TYPE("DT_UNUSED_DATA_TYPE", DataType.DT_UNUSED_DATA_TYPE),
        DT_CONTINUOUS_STEPS_DELTA("DT_CONTINUOUS_STEPS_DELTA", DataType.DT_CONTINUOUS_STEPS_DELTA),
        DT_CONTINUOUS_STEPS_TOTAL("DT_CONTINUOUS_STEPS_TOTAL", DataType.DT_CONTINUOUS_STEPS_TOTAL),
        DT_CONTINUOUS_STEPS_RATE_STATISTIC("DT_CONTINUOUS_STEPS_RATE_STATISTIC", DataType.DT_CONTINUOUS_STEPS_RATE_STATISTIC),
        DT_INSTANTANEOUS_STEPS_RATE("DT_INSTANTANEOUS_STEPS_RATE", DataType.DT_INSTANTANEOUS_STEPS_RATE),
        DT_CONTINUOUS_ACTIVITY_SEGMENT("DT_CONTINUOUS_ACTIVITY_SEGMENT", DataType.DT_CONTINUOUS_ACTIVITY_SEGMENT),
        DT_CONTINUOUS_CALORIES_CONSUMED("DT_CONTINUOUS_CALORIES_CONSUMED", DataType.DT_CONTINUOUS_CALORIES_CONSUMED),
        DT_CONTINUOUS_CALORIES_BURNT("DT_CONTINUOUS_CALORIES_BURNT", DataType.DT_CONTINUOUS_CALORIES_BURNT),
        DT_INSTANTANEOUS_CALORIES_BMR("DT_INSTANTANEOUS_CALORIES_BMR", DataType.DT_INSTANTANEOUS_CALORIES_BMR),
        DT_INSTANTANEOUS_POWER_SAMPLE("DT_INSTANTANEOUS_POWER_SAMPLE", DataType.DT_INSTANTANEOUS_POWER_SAMPLE),
        DT_INSTANTANEOUS_ACTIVITY_SAMPLE("DT_INSTANTANEOUS_ACTIVITY_SAMPLE", DataType.DT_INSTANTANEOUS_ACTIVITY_SAMPLE),
        DT_INSTANTANEOUS_ACTIVITY_SAMPLES("DT_INSTANTANEOUS_ACTIVITY_SAMPLES", DataType.DT_INSTANTANEOUS_ACTIVITY_SAMPLES),
        DT_INSTANTANEOUS_HEART_RATE("DT_INSTANTANEOUS_HEART_RATE", DataType.DT_INSTANTANEOUS_HEART_RATE),
        DT_INSTANTANEOUS_LOCATION_SAMPLE("DT_INSTANTANEOUS_LOCATION_SAMPLE", DataType.DT_INSTANTANEOUS_LOCATION_SAMPLE),
        DT_INSTANTANEOUS_LOCATION_TRACE("DT_INSTANTANEOUS_LOCATION_TRACE", DataType.DT_INSTANTANEOUS_LOCATION_TRACE),
        DT_CONTINUOUS_DISTANCE_DELTA("DT_CONTINUOUS_DISTANCE_DELTA", DataType.DT_CONTINUOUS_DISTANCE_DELTA),
        DT_CONTINUOUS_DISTANCE_TOTAL("DT_CONTINUOUS_DISTANCE_TOTAL", DataType.DT_CONTINUOUS_DISTANCE_TOTAL),
        DT_CONTINUOUS_CALORIES_BURNT_TOTAL("DT_CONTINUOUS_CALORIES_BURNT_TOTAL", DataType.DT_CONTINUOUS_CALORIES_BURNT_TOTAL),
        DT_INSTANTANEOUS_SPEED("DT_INSTANTANEOUS_SPEED", DataType.DT_INSTANTANEOUS_SPEED),
        DT_CONTINUOUS_BIKING_WHEEL_ROTATION_TOTAL("DT_CONTINUOUS_BIKING_WHEEL_ROTATION_TOTAL", DataType.DT_CONTINUOUS_BIKING_WHEEL_ROTATION_TOTAL),
        DT_INSTANTANEOUS_BIKING_WHEEL_ROTATION("DT_INSTANTANEOUS_BIKING_WHEEL_ROTATION", DataType.DT_INSTANTANEOUS_BIKING_WHEEL_ROTATION),
        DT_CONTINUOUS_BIKING_PEDALING_TOTAL("DT_CONTINUOUS_BIKING_PEDALING_TOTAL", DataType.DT_CONTINUOUS_BIKING_PEDALING_TOTAL),
        DT_INSTANTANEOUS_BIKING_PEDALING_RATE("DT_INSTANTANEOUS_BIKING_PEDALING_RATE", DataType.DT_INSTANTANEOUS_BIKING_PEDALING_RATE),
        DT_INSTANTANEOUS_HEIGHT("DT_INSTANTANEOUS_HEIGHT", DataType.DT_INSTANTANEOUS_HEIGHT),
        DT_INSTANTANEOUS_BODY_WEIGHT("DT_INSTANTANEOUS_BODY_WEIGHT", DataType.DT_INSTANTANEOUS_BODY_WEIGHT),
        DT_INSTANTANEOUS_BODY_FAT_RATE("DT_INSTANTANEOUS_BODY_FAT_RATE", DataType.DT_INSTANTANEOUS_BODY_FAT_RATE),
        DT_INSTANTANEOUS_NUTRITION_FACTS("DT_INSTANTANEOUS_NUTRITION_FACTS", DataType.DT_INSTANTANEOUS_NUTRITION_FACTS),
        DT_INSTANTANEOUS_HYDRATE("DT_INSTANTANEOUS_HYDRATE", DataType.DT_INSTANTANEOUS_HYDRATE),
        DT_CONTINUOUS_WORKOUT_DURATION("DT_CONTINUOUS_WORKOUT_DURATION", DataType.DT_CONTINUOUS_WORKOUT_DURATION),
        DT_CONTINUOUS_EXERCISE_INTENSITY("DT_CONTINUOUS_EXERCISE_INTENSITY", DataType.DT_CONTINUOUS_EXERCISE_INTENSITY),
        DT_STATISTICS_SLEEP("DT_STATISTICS_SLEEP", DataType.DT_STATISTICS_SLEEP),
        DT_CONTINUOUS_SLEEP("DT_CONTINUOUS_SLEEP", DataType.DT_CONTINUOUS_SLEEP),
        DT_INSTANTANEOUS_STRESS("DT_INSTANTANEOUS_STRESS", DataType.DT_INSTANTANEOUS_STRESS),
        DT_INSTANTANEOUS_STRESS_STATISTICS("DT_INSTANTANEOUS_STRESS_STATISTICS", DataType.DT_INSTANTANEOUS_STRESS_STATISTICS),
        POLYMERIZE_CONTINUOUS_WORKOUT_DURATION("POLYMERIZE_CONTINUOUS_WORKOUT_DURATION", DataType.POLYMERIZE_CONTINUOUS_WORKOUT_DURATION),
        POLYMERIZE_CONTINUOUS_ACTIVITY_STATISTICS("POLYMERIZE_CONTINUOUS_ACTIVITY_STATISTICS", DataType.POLYMERIZE_CONTINUOUS_ACTIVITY_STATISTICS),
        POLYMERIZE_CONTINUOUS_CALORIES_BMR_STATISTICS("POLYMERIZE_CONTINUOUS_CALORIES_BMR_STATISTICS", DataType.POLYMERIZE_CONTINUOUS_CALORIES_BMR_STATISTICS),
        POLYMERIZE_STEP_COUNT_DELTA("POLYMERIZE_STEP_COUNT_DELTA", DataType.POLYMERIZE_STEP_COUNT_DELTA),
        POLYMERIZE_DISTANCE_DELTA("POLYMERIZE_DISTANCE_DELTA", DataType.POLYMERIZE_DISTANCE_DELTA),
        POLYMERIZE_CALORIES_CONSUMED("POLYMERIZE_CALORIES_CONSUMED", DataType.POLYMERIZE_CALORIES_CONSUMED),
        POLYMERIZE_CALORIES_EXPENDED("POLYMERIZE_CALORIES_EXPENDED", DataType.POLYMERIZE_CALORIES_EXPENDED),
        POLYMERIZE_CONTINUOUS_EXERCISE_INTENSITY_STATISTICS("POLYMERIZE_CONTINUOUS_EXERCISE_INTENSITY_STATISTICS", DataType.POLYMERIZE_CONTINUOUS_EXERCISE_INTENSITY_STATISTICS),
        POLYMERIZE_CONTINUOUS_HEART_RATE_STATISTICS("POLYMERIZE_CONTINUOUS_HEART_RATE_STATISTICS", DataType.POLYMERIZE_CONTINUOUS_HEART_RATE_STATISTICS),
        POLYMERIZE_CONTINUOUS_LOCATION_BOUNDARY_RANGE("POLYMERIZE_CONTINUOUS_LOCATION_BOUNDARY_RANGE", DataType.POLYMERIZE_CONTINUOUS_LOCATION_BOUNDARY_RANGE),
        POLYMERIZE_CONTINUOUS_POWER_STATISTICS("POLYMERIZE_CONTINUOUS_POWER_STATISTICS", DataType.POLYMERIZE_CONTINUOUS_POWER_STATISTICS),
        POLYMERIZE_CONTINUOUS_SPEED_STATISTICS("POLYMERIZE_CONTINUOUS_SPEED_STATISTICS", DataType.POLYMERIZE_CONTINUOUS_SPEED_STATISTICS),
        POLYMERIZE_CONTINUOUS_BODY_FAT_RATE_STATISTICS("POLYMERIZE_CONTINUOUS_BODY_FAT_RATE_STATISTICS", DataType.POLYMERIZE_CONTINUOUS_BODY_FAT_RATE_STATISTICS),
        POLYMERIZE_CONTINUOUS_BODY_WEIGHT_STATISTICS("POLYMERIZE_CONTINUOUS_BODY_WEIGHT_STATISTICS", DataType.POLYMERIZE_CONTINUOUS_BODY_WEIGHT_STATISTICS),
        POLYMERIZE_CONTINUOUS_HEIGHT_STATISTICS("POLYMERIZE_CONTINUOUS_HEIGHT_STATISTICS", DataType.POLYMERIZE_CONTINUOUS_HEIGHT_STATISTICS),
        POLYMERIZE_CONTINUOUS_NUTRITION_FACTS_STATISTICS("POLYMERIZE_CONTINUOUS_NUTRITION_FACTS_STATISTICS", DataType.POLYMERIZE_CONTINUOUS_NUTRITION_FACTS_STATISTICS),
        POLYMERIZE_HYDRATION("POLYMERIZE_HYDRATION", DataType.POLYMERIZE_HYDRATION),

        // HEALTH DATA TYPES
        DT_INSTANTANEOUS_BLOOD_PRESSURE("DT_INSTANTANEOUS_BLOOD_PRESSURE", HealthDataTypes.DT_INSTANTANEOUS_BLOOD_PRESSURE),
        DT_INSTANTANEOUS_BLOOD_GLUCOSE("DT_INSTANTANEOUS_BLOOD_GLUCOSE", HealthDataTypes.DT_INSTANTANEOUS_BLOOD_GLUCOSE),
        DT_INSTANTANEOUS_SPO2("DT_INSTANTANEOUS_SPO2", HealthDataTypes.DT_INSTANTANEOUS_SPO2),
        DT_INSTANTANEOUS_BODY_TEMPERATURE("DT_INSTANTANEOUS_BODY_TEMPERATURE", HealthDataTypes.DT_INSTANTANEOUS_BODY_TEMPERATURE),
        DT_INSTANTANEOUS_BODY_TEMPERATURE_REST("DT_INSTANTANEOUS_BODY_TEMPERATURE_REST", HealthDataTypes.DT_INSTANTANEOUS_BODY_TEMPERATURE_REST),
        DT_INSTANTANEOUS_CERVICAL_MUCUS("DT_INSTANTANEOUS_CERVICAL_MUCUS", HealthDataTypes.DT_INSTANTANEOUS_CERVICAL_MUCUS),
        DT_INSTANTANEOUS_CERVICAL_STATUS("DT_INSTANTANEOUS_CERVICAL_STATUS", HealthDataTypes.DT_INSTANTANEOUS_CERVICAL_STATUS),
        DT_CONTINUOUS_MENSTRUAL_FLOW("DT_CONTINUOUS_MENSTRUAL_FLOW", HealthDataTypes.DT_CONTINUOUS_MENSTRUAL_FLOW),
        DT_INSTANTANEOUS_OVULATION_DETECTION("DT_INSTANTANEOUS_OVULATION_DETECTION", HealthDataTypes.DT_INSTANTANEOUS_OVULATION_DETECTION),
        DT_INSTANTANEOUS_VAGINAL_SPECKLE("DT_INSTANTANEOUS_VAGINAL_SPECKLE", HealthDataTypes.DT_INSTANTANEOUS_VAGINAL_SPECKLE),
        POLYMERIZE_CONTINUOUS_BODY_BLOOD_PRESSURE_STATISTICS("POLYMERIZE_CONTINUOUS_BODY_BLOOD_PRESSURE_STATISTICS", HealthDataTypes.POLYMERIZE_CONTINUOUS_BODY_BLOOD_PRESSURE_STATISTICS),
        POLYMERIZE_CONTINUOUS_BODY_BLOOD_GLUCOSE_STATISTICS("POLYMERIZE_CONTINUOUS_BODY_BLOOD_GLUCOSE_STATISTICS", HealthDataTypes.POLYMERIZE_CONTINUOUS_BODY_BLOOD_GLUCOSE_STATISTICS),
        POLYMERIZE_CONTINUOUS_SPO2_STATISTICS("POLYMERIZE_CONTINUOUS_SPO2_STATISTICS", HealthDataTypes.POLYMERIZE_CONTINUOUS_SPO2_STATISTICS),
        POLYMERIZE_CONTINUOUS_BODY_TEMPERATURE_STATISTICS("POLYMERIZE_CONTINUOUS_BODY_TEMPERATURE_STATISTICS", HealthDataTypes.POLYMERIZE_CONTINUOUS_BODY_TEMPERATURE_STATISTICS),
        POLYMERIZE_CONTINUOUS_BODY_TEMPERATURE_REST_STATISTICS("POLYMERIZE_CONTINUOUS_BODY_TEMPERATURE_REST_STATISTICS", HealthDataTypes.POLYMERIZE_CONTINUOUS_BODY_TEMPERATURE_REST_STATISTICS),
        POLYMERIZE_INSTANTANEOUS_CERVICAL_MUCUS("POLYMERIZE_INSTANTANEOUS_CERVICAL_MUCUS", HealthDataTypes.POLYMERIZE_INSTANTANEOUS_CERVICAL_MUCUS),
        POLYMERIZE_INSTANTANEOUS_CERVICAL_STATUS("POLYMERIZE_INSTANTANEOUS_CERVICAL_MUCUS", HealthDataTypes.POLYMERIZE_INSTANTANEOUS_CERVICAL_MUCUS),
        POLYMERIZE_CONTINUOUS_MENSTRUAL_FLOW("POLYMERIZE_CONTINUOUS_MENSTRUAL_FLOW", HealthDataTypes.POLYMERIZE_CONTINUOUS_MENSTRUAL_FLOW),
        POLYMERIZE_INSTANTANEOUS_OVULATION_DETECTION("POLYMERIZE_INSTANTANEOUS_OVULATION_DETECTION", HealthDataTypes.POLYMERIZE_INSTANTANEOUS_OVULATION_DETECTION),
        POLYMERIZE_INSTANTANEOUS_VAGINAL_SPECKLE("POLYMERIZE_INSTANTANEOUS_VAGINAL_SPECKLE", HealthDataTypes.POLYMERIZE_INSTANTANEOUS_VAGINAL_SPECKLE),

        // SPORT DATA TYPES
        TYPE_TREADMILL_DATA("TYPE_TREADMILL_DATA", SportDataTypes.TYPE_TREADMILL_DATA),
        TYPE_CROSS_TRAINER_DATA("TYPE_CROSS_TRAINER_DATA", SportDataTypes.TYPE_CROSS_TRAINER_DATA),
        TYPE_TRAINING_STATUS_DATA("TYPE_TRAINING_STATUS_DATA", SportDataTypes.TYPE_TRAINING_STATUS_DATA),
        TYPE_SUPPORT_SPEED_RANGE("TYPE_SUPPORT_SPEED_RANGE", SportDataTypes.TYPE_SUPPORT_SPEED_RANGE),
        TYPE_SUPPORT_INCLINATION_RANGE("TYPE_SUPPORT_INCLINATION_RANGE", SportDataTypes.TYPE_SUPPORT_INCLINATION_RANGE),
        TYPE_SUPPORT_LEVEL_RANGE("TYPE_SUPPORT_LEVEL_RANGE", SportDataTypes.TYPE_SUPPORT_LEVEL_RANGE),
        TYPE_SUPPORT_HEART_RANGE("TYPE_SUPPORT_HEART_RANGE", SportDataTypes.TYPE_SUPPORT_HEART_RANGE),
        TYPE_SUPPORT_POWER_RANGE("TYPE_SUPPORT_POWER_RANGE", SportDataTypes.TYPE_SUPPORT_POWER_RANGE),
        TYPE_FITNESS_MACHINE_FEATURE("TYPE_FITNESS_MACHINE_FEATURE", SportDataTypes.TYPE_FITNESS_MACHINE_FEATURE),
        TYPE_FITNESS_MACHINE_STATUS("TYPE_FITNESS_MACHINE_STATUS", SportDataTypes.TYPE_FITNESS_MACHINE_STATUS),
        TYPE_FITNESS_MACHINE_CONTROL_INDICATION("TYPE_FITNESS_MACHINE_CONTROL_INDICATION", SportDataTypes.TYPE_FITNESS_MACHINE_CONTROL_INDICATION),
        TYPE_FITNESS_MACHINE_CONTROL("TYPE_FITNESS_MACHINE_CONTROL", SportDataTypes.TYPE_FITNESS_MACHINE_CONTROL),
        TYPE_FITNESS_EXTENSION_DATA("TYPE_FITNESS_EXTENSION_DATA", SportDataTypes.TYPE_FITNESS_EXTENSION_DATA),
        TYPE_CUSTOM_BLE_COMMAND("TYPE_CUSTOM_BLE_COMMAND", SportDataTypes.TYPE_CUSTOM_BLE_COMMAND),
        TYPE_FITNESS_MACHINE_PROFILE("TYPE_FITNESS_MACHINE_PROFILE", SportDataTypes.TYPE_FITNESS_MACHINE_PROFILE),
        TYPE_MANUFACTURER_NAME("TYPE_MANUFACTURER_NAME", SportDataTypes.TYPE_MANUFACTURER_NAME),
        TYPE_MODEL_NUMBER("TYPE_MODEL_NUMBER", SportDataTypes.TYPE_MODEL_NUMBER),
        TYPE_SERIAL_NUMBER("TYPE_SERIAL_NUMBER", SportDataTypes.TYPE_SERIAL_NUMBER),
        TYPE_HARDWARE_REVISION("TYPE_HARDWARE_REVISION", SportDataTypes.TYPE_HARDWARE_REVISION),
        TYPE_FIRMWARE_REVISION("TYPE_FIRMWARE_REVISION", SportDataTypes.TYPE_FIRMWARE_REVISION),
        TYPE_SOFTWARE_REVISION("TYPE_SOFTWARE_REVISION", SportDataTypes.TYPE_SOFTWARE_REVISION),
        TYPE_SYSTEM_ID("TYPE_SYSTEM_ID", SportDataTypes.TYPE_SYSTEM_ID);


        private final String value;
        private final DataType dataType;

        DataTypeConstants(String value, DataType dataType) {
            this.value = value;
            this.dataType = dataType;
        }

        public String getValue() {
            return value;
        }

        public DataType getDataType() {
            return dataType;
        }

        public static DataTypeConstants fromString(String text) {
            for (DataTypeConstants variable : DataTypeConstants.values()) {
                if (variable.value.equalsIgnoreCase(text)) {
                    return variable;
                }
            }
            return null;
        }
    }

    /**
     * whole data type constants variables as Map
     **/
    Map<String, Object> DATA_TYPES_MAP = initDataTypesMap();


    /**
     * Initializes Data Constants map.
     *
     * @return Map<String, Object> Data Constants map
     */
    static Map<String, Object> initDataTypesMap() {
        Map<String, Object> constantMap = new HashMap<>();
        for (DataTypeConstants variable : EnumSet.allOf(DataTypeConstants.class)) {
            String key = variable.name();
            String value = variable.getValue();
            constantMap.put(key, value);
        }
        return Collections.unmodifiableMap(constantMap);
    }

    /**
     * All the {@link Field} constants.
     */
    enum FieldConstants {
        /* Field Types */
        FIELD_PRECISION("FIELD_PRECISION", Field.FIELD_PRECISION),
        FIELD_ALTITUDE("FIELD_ALTITUDE", Field.FIELD_ALTITUDE),
        FIELD_TYPE_OF_ACTIVITY("FIELD_TYPE_OF_ACTIVITY", Field.FIELD_TYPE_OF_ACTIVITY),
        FIELD_POSSIBILITY_OF_ACTIVITY("FIELD_POSSIBILITY_OF_ACTIVITY", Field.FIELD_POSSIBILITY_OF_ACTIVITY),
        FIELD_BPM("FIELD_BPM", Field.FIELD_BPM),
        FIELD_POSSIBILITY("FIELD_POSSIBILITY", Field.FIELD_POSSIBILITY),
        FIELD_SPAN("FIELD_SPAN", Field.FIELD_SPAN),
        FIELD_DISTANCE("FIELD_DISTANCE", Field.FIELD_DISTANCE),
        FIELD_DISTANCE_DELTA("FIELD_DISTANCE_DELTA", Field.FIELD_DISTANCE_DELTA),
        FIELD_HEIGHT("FIELD_HEIGHT", Field.FIELD_HEIGHT),
        FIELD_STEPS_DELTA("FIELD_STEPS_DELTA", Field.FIELD_STEPS_DELTA),
        FIELD_STEPS("FIELD_STEPS", Field.FIELD_STEPS),
        FIELD_STEP_LENGTH("FIELD_STEP_LENGTH", Field.FIELD_STEP_LENGTH),
        FIELD_LATITUDE("FIELD_LATITUDE", Field.FIELD_LATITUDE),
        FIELD_LONGITUDE("FIELD_LONGITUDE", Field.FIELD_LONGITUDE),
        FIELD_BODY_WEIGHT("FIELD_BODY_WEIGHT", Field.FIELD_BODY_WEIGHT),
        FIELD_BMI("FIELD_BMI", Field.FIELD_BMI),
        FIELD_BODY_FAT("FIELD_BODY_FAT", Field.FIELD_BODY_FAT),
        FIELD_BODY_FAT_RATE("FIELD_BODY_FAT_RATE", Field.FIELD_BODY_FAT_RATE),
        FIELD_MUSCLE_MASS("FIELD_MUSCLE_MASS", Field.FIELD_MUSCLE_MASS),
        FIELD_BASAL_METABOLISM("FIELD_BASAL_METABOLISM", Field.FIELD_BASAL_METABOLISM),
        FIELD_MOISTURE("FIELD_MOISTURE", Field.FIELD_MOISTURE),
        FIELD_MOISTURE_RATE("FIELD_MOISTURE_RATE", Field.FIELD_MOISTURE_RATE),
        FIELD_VISCERAL_FAT_LEVEL("FIELD_VISCERAL_FAT_LEVEL", Field.FIELD_VISCERAL_FAT_LEVEL),
        FIELD_BONE_SALT("FIELD_BONE_SALT", Field.FIELD_BONE_SALT),
        FIELD_PROTEIN_RATE("FIELD_PROTEIN_RATE", Field.FIELD_PROTEIN_RATE),
        FIELD_BODY_AGE("FIELD_BODY_AGE", Field.FIELD_BODY_AGE),
        FIELD_BODY_SCORE("FIELD_BODY_SCORE", Field.FIELD_BODY_SCORE),
        FIELD_SKELETAL_MUSCLEL_MASS("FIELD_SKELETAL_MUSCLEL_MASS", Field.FIELD_SKELETAL_MUSCLEL_MASS),
        FIELD_IMPEDANCE("FIELD_IMPEDANCE", Field.FIELD_IMPEDANCE),
        FIELD_CIRCUMFERENCE("FIELD_CIRCUMFERENCE", Field.FIELD_CIRCUMFERENCE),
        FIELD_SPEED("FIELD_SPEED", Field.FIELD_SPEED),
        FIELD_RPM("FIELD_RPM", Field.FIELD_RPM),
        FIELD_STEP_RATE("FIELD_STEP_RATE", Field.FIELD_STEP_RATE),
        FIELD_ROTATION("FIELD_ROTATION", Field.FIELD_ROTATION),
        FIELD_CALORIES("FIELD_CALORIES", Field.FIELD_CALORIES),
        FIELD_CALORIES_TOTAL("FIELD_CALORIES_TOTAL", Field.FIELD_CALORIES_TOTAL),
        FIELD_POWER("FIELD_POWER", Field.FIELD_POWER),
        FIELD_HYDRATE("FIELD_HYDRATE", Field.FIELD_HYDRATE),
        FIELD_MEAL("FIELD_MEAL", Field.FIELD_MEAL),
        FIELD_FOOD("FIELD_FOOD", Field.FIELD_FOOD),
        FIELD_NUTRIENTS("FIELD_NUTRIENTS", Field.FIELD_NUTRIENTS),
        FIELD_NUTRIENTS_FACTS("FIELD_NUTRIENTS_FACTS", Field.FIELD_NUTRIENTS_FACTS),
        FIELD_FRAGMENTS("FIELD_FRAGMENTS", Field.FIELD_FRAGMENTS),
        FIELD_AVG("FIELD_AVG", Field.FIELD_AVG),
        FIELD_MAX("FIELD_MAX", Field.FIELD_MAX),
        FIELD_MIN("FIELD_MIN", Field.FIELD_MIN),
        FIELD_MIN_LATITUDE("FIELD_MIN_LATITUDE", Field.FIELD_MIN_LATITUDE),
        FIELD_MIN_LONGITUDE("FIELD_MIN_LONGITUDE", Field.FIELD_MIN_LONGITUDE),
        FIELD_MAX_LATITUDE("FIELD_MAX_LATITUDE", Field.FIELD_MAX_LATITUDE),
        FIELD_MAX_LONGITUDE("FIELD_MAX_LONGITUDE", Field.FIELD_MAX_LONGITUDE),
        FIELD_APPEARANCE("FIELD_APPEARANCE", Field.FIELD_APPEARANCE),
        FIELD_INTENSITY("FIELD_INTENSITY", Field.FIELD_INTENSITY),
        FALL_ASLEEP_TIME("FALL_ASLEEP_TIME", Field.FALL_ASLEEP_TIME),
        WAKE_UP_TIME("WAKE_UP_TIME", Field.WAKE_UP_TIME),
        SLEEP_SCORE("SLEEP_SCORE", Field.SLEEP_SCORE),
        SLEEP_LATENCY("SLEEP_LATENCY", Field.SLEEP_LATENCY),
        GO_BED_TIME("GO_BED_TIME", Field.GO_BED_TIME),
        SLEEP_EFFICIENCY("SLEEP_EFFICIENCY", Field.SLEEP_EFFICIENCY),
        LIGHT_SLEEP_TIME("LIGHT_SLEEP_TIME", Field.LIGHT_SLEEP_TIME),
        DEEP_SLEEP_TIME("DEEP_SLEEP_TIME", Field.DEEP_SLEEP_TIME),
        DREAM_TIME("DREAM_TIME", Field.DREAM_TIME),
        AWAKE_TIME("AWAKE_TIME", Field.AWAKE_TIME),
        ALL_SLEEP_TIME("ALL_SLEEP_TIME", Field.ALL_SLEEP_TIME),
        WAKE_UP_CNT("WAKE_UP_CNT", Field.WAKE_UP_CNT),
        DEEP_SLEEP_PART("DEEP_SLEEP_PART", Field.DEEP_SLEEP_PART),
        SLEEP_STATE("SLEEP_STATE", Field.SLEEP_STATE),
        SCORE("SCORE", Field.SCORE),
        GRADE("GRADE", Field.GRADE),
        MEASURE_TYPE("MEASURE_TYPE", Field.MEASURE_TYPE),
        STRESS_AVG("STRESS_AVG", Field.STRESS_AVG),
        STRESS_MAX("STRESS_MAX", Field.STRESS_MAX),
        STRESS_MIN("STRESS_MIN", Field.STRESS_MIN),
        STRESS_LAST("STRESS_LAST", Field.STRESS_LAST),
        MEASURE_COUNT("MEASURE_COUNT", Field.MEASURE_COUNT),

        // HEALTH FIELDS
        FIELD_SYSTOLIC_PRESSURE("FIELD_SYSTOLIC_PRESSURE", HealthFields.FIELD_SYSTOLIC_PRESSURE),
        FIELD_SYSTOLIC_PRESSURE_AVG("FIELD_SYSTOLIC_PRESSURE_AVG", HealthFields.FIELD_SYSTOLIC_PRESSURE_AVG),
        FIELD_SYSTOLIC_PRESSURE_MIN("FIELD_SYSTOLIC_PRESSURE_MIN", HealthFields.FIELD_SYSTOLIC_PRESSURE_MIN),
        FIELD_SYSTOLIC_PRESSURE_MAX("FIELD_SYSTOLIC_PRESSURE_MAX", HealthFields.FIELD_SYSTOLIC_PRESSURE_MAX),
        FIELD_DIASTOLIC_PRESSURE("FIELD_DIASTOLIC_PRESSURE", HealthFields.FIELD_DIASTOLIC_PRESSURE),
        FIELD_DIASTOLIC_PRESSURE_AVG("FIELD_DIASTOLIC_PRESSURE_AVG", HealthFields.FIELD_DIASTOLIC_PRESSURE_AVG),
        FIELD_DIASTOLIC_PRESSURE_MIN("FIELD_DIASTOLIC_PRESSURE_MIN", HealthFields.FIELD_DIASTOLIC_PRESSURE_MIN),
        FIELD_DIASTOLIC_PRESSURE_MAX("FIELD_DIASTOLIC_PRESSURE_MAX", HealthFields.FIELD_DIASTOLIC_PRESSURE_MAX),
        FIELD_BODY_POSTURE("FIELD_BODY_POSTURE", HealthFields.FIELD_BODY_POSTURE),
        FIELD_MEASURE_BODY_PART_OF_BLOOD_PRESSURE("FIELD_MEASURE_BODY_PART_OF_BLOOD_PRESSURE", HealthFields.FIELD_MEASURE_BODY_PART_OF_BLOOD_PRESSURE),
        FIELD_LEVEL("FIELD_LEVEL", HealthFields.FIELD_LEVEL),
        FIELD_MEASURE_TIME("FIELD_MEASURE_TIME", HealthFields.FIELD_MEASURE_TIME),
        FIELD_CORRELATION_WITH_MEALTIME("FIELD_CORRELATION_WITH_MEALTIME", HealthFields.FIELD_CORRELATION_WITH_MEALTIME),
        FIELD_CORRELATION_WITH_SLEEP_STATE("FIELD_CORRELATION_WITH_SLEEP_STATE", HealthFields.FIELD_CORRELATION_WITH_SLEEP_STATE),
        FIELD_SAMPLE_SOURCE("FIELD_SAMPLE_SOURCE", HealthFields.FIELD_SAMPLE_SOURCE),
        FIELD_SATURATION("FIELD_SATURATION", HealthFields.FIELD_SATURATION),
        FIELD_SATURATION_AVG("FIELD_SATURATION_AVG", HealthFields.FIELD_SATURATION_AVG),
        FIELD_SATURATION_MIN("FIELD_SATURATION_MIN", HealthFields.FIELD_SATURATION_MIN),
        FIELD_SATURATION_MAX("FIELD_SATURATION_MAX", HealthFields.FIELD_SATURATION_MAX),
        FIELD_OXYGEN_SUPPLY_FLOW_RATE("FIELD_OXYGEN_SUPPLY_FLOW_RATE", HealthFields.FIELD_OXYGEN_SUPPLY_FLOW_RATE),
        FIELD_OXYGEN_SUPPLY_FLOW_RATE_AVG("FIELD_OXYGEN_SUPPLY_FLOW_RATE_AVG", HealthFields.FIELD_OXYGEN_SUPPLY_FLOW_RATE_AVG),
        FIELD_OXYGEN_SUPPLY_FLOW_RATE_MIN("FIELD_OXYGEN_SUPPLY_FLOW_RATE_MIN", HealthFields.FIELD_OXYGEN_SUPPLY_FLOW_RATE_MIN),
        FIELD_OXYGEN_SUPPLY_FLOW_RATE_MAX("FIELD_OXYGEN_SUPPLY_FLOW_RATE_MAX", HealthFields.FIELD_OXYGEN_SUPPLY_FLOW_RATE_MAX),
        FIELD_OXYGEN_THERAPY("FIELD_OXYGEN_THERAPY", HealthFields.FIELD_OXYGEN_THERAPY),
        FIELD_SPO2_MEASUREMENT_MECHANISM("FIELD_SPO2_MEASUREMENT_MECHANISM", HealthFields.FIELD_SPO2_MEASUREMENT_MECHANISM),
        FIELD_SPO2_MEASUREMENT_APPROACH("FIELD_SPO2_MEASUREMENT_APPROACH", HealthFields.FIELD_SPO2_MEASUREMENT_APPROACH),
        FIELD_TEMPERATURE("FIELD_TEMPERATURE", HealthFields.FIELD_TEMPERATURE),
        FIELD_MEASURE_BODY_PART_OF_TEMPERATURE("FIELD_MEASURE_BODY_PART_OF_TEMPERATURE", HealthFields.FIELD_MEASURE_BODY_PART_OF_TEMPERATURE),
        FIELD_TEXTURE("FIELD_TEXTURE", HealthFields.FIELD_TEXTURE),
        FIELD_AMOUNT("FIELD_AMOUNT", HealthFields.FIELD_AMOUNT),
        FIELD_POSITION("FIELD_POSITION", HealthFields.FIELD_POSITION),
        FIELD_DILATION_STATUS("FIELD_DILATION_STATUS", HealthFields.FIELD_DILATION_STATUS),
        FIELD_FIRMNESS_LEVEL("FIELD_FIRMNESS_LEVEL", HealthFields.FIELD_FIRMNESS_LEVEL),
        FIELD_VOLUME("FIELD_VOLUME", HealthFields.FIELD_VOLUME),
        FIELD_DETECTION_RESULT("FIELD_DETECTION_RESULT", HealthFields.FIELD_DETECTION_RESULT),

        // SPORT FIELDS
        FIELD_TREADMILL_INSTANTANEOUS_SPEED("FIELD_TREADMILL_INSTANTANEOUS_SPEED", SportFields.FIELD_TREADMILL_INSTANTANEOUS_SPEED),
        FIELD_TREADMILL_AVERAGE_SPEED("FIELD_TREADMILL_AVERAGE_SPEED", SportFields.FIELD_TREADMILL_AVERAGE_SPEED),
        FIELD_TREADMILL_TOTAL_DISTANCE("FIELD_TREADMILL_TOTAL_DISTANCE", SportFields.FIELD_TREADMILL_TOTAL_DISTANCE),
        FIELD_TREADMILL_INCLINATION("FIELD_TREADMILL_INCLINATION", SportFields.FIELD_TREADMILL_INCLINATION),
        FIELD_TREADMILL_RAMP_ANGLE_SETTING("FIELD_TREADMILL_RAMP_ANGLE_SETTING", SportFields.FIELD_TREADMILL_RAMP_ANGLE_SETTING),
        FIELD_TREADMILL_POSITIVE_ELEVATION_GAIN("FIELD_TREADMILL_POSITIVE_ELEVATION_GAIN", SportFields.FIELD_TREADMILL_POSITIVE_ELEVATION_GAIN),
        FIELD_TREADMILL_NEGATIVE_ELEVATION_GAIN("FIELD_TREADMILL_NEGATIVE_ELEVATION_GAIN", SportFields.FIELD_TREADMILL_NEGATIVE_ELEVATION_GAIN),
        FIELD_TREADMILL_INSTANTANEOUS_PACE("FIELD_TREADMILL_INSTANTANEOUS_PACE", SportFields.FIELD_TREADMILL_INSTANTANEOUS_PACE),
        FIELD_TREADMILL_AVERAGE_PACE("FIELD_TREADMILL_AVERAGE_PACE", SportFields.FIELD_TREADMILL_AVERAGE_PACE),
        FIELD_TREADMILL_TOTAL_ENERGY("FIELD_TREADMILL_TOTAL_ENERGY", SportFields.FIELD_TREADMILL_TOTAL_ENERGY),
        FIELD_TREADMILL_ENERGY_PER_HOUR("FIELD_TREADMILL_ENERGY_PER_HOUR", SportFields.FIELD_TREADMILL_ENERGY_PER_HOUR),
        FIELD_TREADMILL_ENERGY_PER_MINUTE("FIELD_TREADMILL_ENERGY_PER_MINUTE", SportFields.FIELD_TREADMILL_ENERGY_PER_MINUTE),
        FIELD_TREADMILL_METABOLIC_EQUIVALENT("FIELD_TREADMILL_METABOLIC_EQUIVALENT", SportFields.FIELD_TREADMILL_METABOLIC_EQUIVALENT),
        FIELD_TREADMILL_HEART_RATE("FIELD_TREADMILL_HEART_RATE", SportFields.FIELD_TREADMILL_HEART_RATE),
        FIELD_TREADMILL_ELAPSED_TIME("FIELD_TREADMILL_ELAPSED_TIME", SportFields.FIELD_TREADMILL_ELAPSED_TIME),
        FIELD_TREADMILL_REMAINING_TIME("FIELD_TREADMILL_REMAINING_TIME", SportFields.FIELD_TREADMILL_REMAINING_TIME),
        FIELD_TREADMILL_FORCE_ON_BELT("FIELD_TREADMILL_FORCE_ON_BELT", SportFields.FIELD_TREADMILL_FORCE_ON_BELT),
        FIELD_TREADMILL_POWER_OUTPUT("FIELD_TREADMILL_POWER_OUTPUT", SportFields.FIELD_TREADMILL_POWER_OUTPUT),
        FIELD_TRAINING_STATUS("FIELD_TRAINING_STATUS", SportFields.FIELD_TRAINING_STATUS),
        FIELD_TRAINING_STATUS_STRING("FIELD_TRAINING_STATUS_STRING", SportFields.FIELD_TRAINING_STATUS_STRING),
        FIELD_SUPPORTED_MINIMUM_SPEED("FIELD_SUPPORTED_MINIMUM_SPEED", SportFields.FIELD_SUPPORTED_MINIMUM_SPEED),
        FIELD_SUPPORTED_MAXIMUM_SPEED("FIELD_SUPPORTED_MAXIMUM_SPEED", SportFields.FIELD_SUPPORTED_MAXIMUM_SPEED),
        FIELD_SUPPORTED_MINIMUM_INCREMENT("FIELD_SUPPORTED_MINIMUM_INCREMENT", SportFields.FIELD_SUPPORTED_MINIMUM_INCREMENT),
        FIELD_SUPPORTED_INCLINATION_MIN_INCLINATION("FIELD_SUPPORTED_INCLINATION_MIN_INCLINATION", SportFields.FIELD_SUPPORTED_INCLINATION_MIN_INCLINATION),
        FIELD_SUPPORTED_INCLINATION_MAX_INCLINATION("FIELD_SUPPORTED_INCLINATION_MAX_INCLINATION", SportFields.FIELD_SUPPORTED_INCLINATION_MAX_INCLINATION),
        FIELD_SUPPORTED_INCLINATION_MIN_INCREMENT("FIELD_SUPPORTED_INCLINATION_MIN_INCREMENT", SportFields.FIELD_SUPPORTED_INCLINATION_MIN_INCREMENT),
        FIELD_SUPPORTED_LEVEL_MIN_RESISTANCE_LEVEL("FIELD_SUPPORTED_LEVEL_MIN_RESISTANCE_LEVEL", SportFields.FIELD_SUPPORTED_LEVEL_MIN_RESISTANCE_LEVEL),
        FIELD_SUPPORTED_LEVEL_MAX_RESISTANCE_LEVEL("FIELD_SUPPORTED_LEVEL_MAX_RESISTANCE_LEVEL", SportFields.FIELD_SUPPORTED_LEVEL_MAX_RESISTANCE_LEVEL),
        FIELD_SUPPORTED_LEVEL_MIN_INCREMENT("FIELD_SUPPORTED_LEVEL_MIN_INCREMENT", SportFields.FIELD_SUPPORTED_LEVEL_MIN_INCREMENT),
        FIELD_SUPPORTED_HEART_MIN_HEART_RATE("FIELD_SUPPORTED_HEART_MIN_HEART_RATE", SportFields.FIELD_SUPPORTED_HEART_MIN_HEART_RATE),
        FIELD_SUPPORTED_HEART_MAX_HEART_RATE("FIELD_SUPPORTED_HEART_MAX_HEART_RATE", SportFields.FIELD_SUPPORTED_HEART_MAX_HEART_RATE),
        FIELD_SUPPORTED_HEART_MIN_INCREMENT("FIELD_SUPPORTED_HEART_MIN_INCREMENT", SportFields.FIELD_SUPPORTED_HEART_MIN_INCREMENT),
        FIELD_SUPPORTED_POWER_MIN_POWER("FIELD_SUPPORTED_POWER_MIN_POWER", SportFields.FIELD_SUPPORTED_POWER_MIN_POWER),
        FIELD_SUPPORTED_POWER_MAX_POWER("FIELD_SUPPORTED_POWER_MAX_POWER", SportFields.FIELD_SUPPORTED_POWER_MAX_POWER),
        FIELD_SUPPORTED_POWER_MIN_INCREMENT("FIELD_SUPPORTED_POWER_MIN_INCREMENT", SportFields.FIELD_SUPPORTED_POWER_MIN_INCREMENT),
        FIELD_FITNESS_MACHINE_FEATURE("FIELD_FITNESS_MACHINE_FEATURE", SportFields.FIELD_FITNESS_MACHINE_FEATURE),
        FIELD_FITNESS_TARGET_SETTING("FIELD_FITNESS_TARGET_SETTING", SportFields.FIELD_FITNESS_TARGET_SETTING),
        FIELD_FITNESS_MACHINE_CONTROL_RESPONSE_OP_CODE("FIELD_FITNESS_MACHINE_CONTROL_RESPONSE_OP_CODE", SportFields.FIELD_FITNESS_MACHINE_CONTROL_RESPONSE_OP_CODE),
        FIELD_FITNESS_MACHINE_CONTROL_REQUEST_OP_CODE("FIELD_FITNESS_MACHINE_CONTROL_REQUEST_OP_CODE", SportFields.FIELD_FITNESS_MACHINE_CONTROL_REQUEST_OP_CODE),
        FIELD_FITNESS_MACHINE_CONTROL_RESULT_OP_CODE("FIELD_FITNESS_MACHINE_CONTROL_RESULT_OP_CODE", SportFields.FIELD_FITNESS_MACHINE_CONTROL_RESULT_OP_CODE),
        FIELD_FITNESS_MACHINE_CONTROL_PARAMETER("FIELD_FITNESS_MACHINE_CONTROL_PARAMETER", SportFields.FIELD_FITNESS_MACHINE_CONTROL_PARAMETER),
        FIELD_CROSS_TRAINER_DATA_INSTANTANEOUS_SPEED("FIELD_CROSS_TRAINER_DATA_INSTANTANEOUS_SPEED", SportFields.FIELD_CROSS_TRAINER_DATA_INSTANTANEOUS_SPEED),
        FIELD_CROSS_TRAINER_DATA_AVERAGE_SPEED("FIELD_CROSS_TRAINER_DATA_AVERAGE_SPEED", SportFields.FIELD_CROSS_TRAINER_DATA_AVERAGE_SPEED),
        FIELD_CROSS_TRAINER_DATA_TOTAL_DISTANCE("FIELD_CROSS_TRAINER_DATA_TOTAL_DISTANCE", SportFields.FIELD_CROSS_TRAINER_DATA_TOTAL_DISTANCE),
        FIELD_CROSS_TRAINER_DATA_STEP_PER_MINUTE("FIELD_CROSS_TRAINER_DATA_STEP_PER_MINUTE", SportFields.FIELD_CROSS_TRAINER_DATA_STEP_PER_MINUTE),
        FIELD_CROSS_TRAINER_DATA_AVERAGE_STEP_RATE("FIELD_CROSS_TRAINER_DATA_AVERAGE_STEP_RATE", SportFields.FIELD_CROSS_TRAINER_DATA_AVERAGE_STEP_RATE),
        FIELD_CROSS_TRAINER_DATA_STRIDE_COUNT("FIELD_CROSS_TRAINER_DATA_STRIDE_COUNT", SportFields.FIELD_CROSS_TRAINER_DATA_STRIDE_COUNT),
        FIELD_CROSS_TRAINER_DATA_POSITIVE_ELEVATION_GAIN("FIELD_CROSS_TRAINER_DATA_POSITIVE_ELEVATION_GAIN", SportFields.FIELD_CROSS_TRAINER_DATA_POSITIVE_ELEVATION_GAIN),
        FIELD_CROSS_TRAINER_DATA_NEGATIVE_ELEVATION_GAIN("FIELD_CROSS_TRAINER_DATA_NEGATIVE_ELEVATION_GAIN", SportFields.FIELD_CROSS_TRAINER_DATA_NEGATIVE_ELEVATION_GAIN),
        FIELD_CROSS_TRAINER_DATA_INCLINATION("FIELD_CROSS_TRAINER_DATA_INCLINATION", SportFields.FIELD_CROSS_TRAINER_DATA_INCLINATION),
        FIELD_CROSS_TRAINER_DATA_RESISTANCE_LEVEL("FIELD_CROSS_TRAINER_DATA_RESISTANCE_LEVEL", SportFields.FIELD_CROSS_TRAINER_DATA_RESISTANCE_LEVEL),
        FIELD_CROSS_TRAINER_DATA_RAMP_ANGLE_SETTING("FIELD_CROSS_TRAINER_DATA_RAMP_ANGLE_SETTING", SportFields.FIELD_CROSS_TRAINER_DATA_RAMP_ANGLE_SETTING),
        FIELD_CROSS_TRAINER_DATA_INSTANTANEOUS_POWER("FIELD_CROSS_TRAINER_DATA_INSTANTANEOUS_POWER", SportFields.FIELD_CROSS_TRAINER_DATA_INSTANTANEOUS_POWER),
        FIELD_CROSS_TRAINER_DATA_AVERAGE_POWER("FIELD_CROSS_TRAINER_DATA_AVERAGE_POWER", SportFields.FIELD_CROSS_TRAINER_DATA_AVERAGE_POWER),
        FIELD_CROSS_TRAINER_DATA_TOTAL_ENERGY("FIELD_CROSS_TRAINER_DATA_TOTAL_ENERGY", SportFields.FIELD_CROSS_TRAINER_DATA_TOTAL_ENERGY),
        FIELD_CROSS_TRAINER_DATA_ENERGY_PER_HOUR("FIELD_CROSS_TRAINER_DATA_ENERGY_PER_HOUR", SportFields.FIELD_CROSS_TRAINER_DATA_ENERGY_PER_HOUR),
        FIELD_CROSS_TRAINER_DATA_ENERGY_PER_MINUTE("FIELD_CROSS_TRAINER_DATA_ENERGY_PER_MINUTE", SportFields.FIELD_CROSS_TRAINER_DATA_ENERGY_PER_MINUTE),
        FIELD_CROSS_TRAINER_DATA_HEART_RATE("FIELD_CROSS_TRAINER_DATA_HEART_RATE", SportFields.FIELD_CROSS_TRAINER_DATA_HEART_RATE),
        FIELD_CROSS_TRAINER_DATA_METABOLIC_EQUIVALENT("FIELD_CROSS_TRAINER_DATA_METABOLIC_EQUIVALENT", SportFields.FIELD_CROSS_TRAINER_DATA_METABOLIC_EQUIVALENT),
        FIELD_CROSS_TRAINER_DATA_ELAPSED_TIME("FIELD_CROSS_TRAINER_DATA_ELAPSED_TIME", SportFields.FIELD_CROSS_TRAINER_DATA_ELAPSED_TIME),
        FIELD_CROSS_TRAINER_DATA_REMAINING_TIME("FIELD_CROSS_TRAINER_DATA_REMAINING_TIME", SportFields.FIELD_CROSS_TRAINER_DATA_REMAINING_TIME),
        FIELD_MACHINE_STATUS_OP_CODE("FIELD_MACHINE_STATUS_OP_CODE", SportFields.FIELD_MACHINE_STATUS_OP_CODE),
        FIELD_EXTENSION_DATA_UNLOCK_CODE("FIELD_EXTENSION_DATA_UNLOCK_CODE", SportFields.FIELD_EXTENSION_DATA_UNLOCK_CODE),
        FIELD_EXTENSION_DATA_HEART_RATE("FIELD_EXTENSION_DATA_HEART_RATE", SportFields.FIELD_EXTENSION_DATA_HEART_RATE),
        FIELD_EXTENSION_DATA_TOTAL_ENERGY("FIELD_EXTENSION_DATA_TOTAL_ENERGY", SportFields.FIELD_EXTENSION_DATA_TOTAL_ENERGY),
        FIELD_EXTENSION_DATA_DYNAMIC_ENERGY("FIELD_EXTENSION_DATA_DYNAMIC_ENERGY", SportFields.FIELD_EXTENSION_DATA_DYNAMIC_ENERGY),
        FIELD_EXTENSION_DATA_STEP_COUNT("FIELD_EXTENSION_DATA_STEP_COUNT", SportFields.FIELD_EXTENSION_DATA_STEP_COUNT),
        FIELD_MACHINE_STATUS_PARAMETER("FIELD_MACHINE_STATUS_PARAMETER", SportFields.FIELD_MACHINE_STATUS_PARAMETER),
        FIELD_CHARACTERISTIC_UUID("FIELD_CHARACTERISTIC_UUID", SportFields.FIELD_CHARACTERISTIC_UUID),
        FIELD_SERVICES_UUID("FIELD_SERVICES_UUID", SportFields.FIELD_SERVICES_UUID),
        FIELD_CUSTOM_COMMAND_CONTENT("FIELD_CUSTOM_COMMAND_CONTENT", SportFields.FIELD_CUSTOM_COMMAND_CONTENT),
        FIELD_DIS_MANUFACTURER_NAME("FIELD_DIS_MANUFACTURER_NAME", SportFields.FIELD_DIS_MANUFACTURER_NAME),
        FIELD_DIS_MODEL_NUMBER("FIELD_DIS_MODEL_NUMBER", SportFields.FIELD_DIS_MODEL_NUMBER),
        FIELD_DIS_SERIAL_NUMBER("FIELD_DIS_SERIAL_NUMBER", SportFields.FIELD_DIS_SERIAL_NUMBER),
        FIELD_DIS_HARDWARE_REVISION("FIELD_DIS_HARDWARE_REVISION", SportFields.FIELD_DIS_HARDWARE_REVISION),
        FIELD_DIS_FIRMWARE_REVISION("FIELD_DIS_FIRMWARE_REVISION", SportFields.FIELD_DIS_FIRMWARE_REVISION),
        FIELD_DIS_SOFTWARE_REVISION("FIELD_DIS_SOFTWARE_REVISION", SportFields.FIELD_DIS_SOFTWARE_REVISION),
        FIELD_DIS_SYSTEM_ID("FIELD_DIS_SYSTEM_ID", SportFields.FIELD_DIS_SYSTEM_ID);


        private final String value;
        private final Field fieldType;

        FieldConstants(String value, Field fieldType) {
            this.value = value;
            this.fieldType = fieldType;
        }

        public String getValue() {
            return value;
        }

        public Field getFieldType() {
            return fieldType;
        }

        public static FieldConstants fromString(String text) {
            for (FieldConstants variable : FieldConstants.values()) {
                if (variable.value.equalsIgnoreCase(text)) {
                    return variable;
                }
            }
            return null;
        }
    }

    /**
     * whole field constant variables as Map
     **/
    Map<String, Object> FIELD_TYPES_MAP = initFieldsMap();

    /**
     * Initializes Field Type Constants map.
     *
     * @return Map<String, Object> Field Type Constants map
     */
    static Map<String, Object> initFieldsMap() {
        Map<String, Object> constantMap = new HashMap<>();
        for (FieldConstants variable : EnumSet.allOf(FieldConstants.class)) {
            String key = variable.name();
            String value = variable.getValue();
            constantMap.put(key, value);
        }
        return Collections.unmodifiableMap(constantMap);
    }


    enum FieldValueEnums {

        //Formats
        FORMAT_INT32("FORMAT_INT32", Field.FORMAT_INT32),
        FORMAT_FLOAT("FORMAT_FLOAT", Field.FORMAT_FLOAT),
        FORMAT_STRING("FORMAT_STRING", Field.FORMAT_STRING),
        FORMAT_MAP("FORMAT_MAP", Field.FORMAT_MAP),
        FORMAT_LONG("FORMAT_LONG", Field.FORMAT_LONG),
        FORMAT_DOUBLE("FORMAT_DOUBLE", Field.FORMAT_DOUBLE),

        MEAL_UNKNOWN("MEAL_UNKNOWN", Field.MEAL_UNKNOWN),
        MEAL_BREAKFAST("MEAL_BREAKFAST", Field.MEAL_BREAKFAST),
        MEAL_LUNCH("MEAL_LUNCH", Field.MEAL_LUNCH),
        MEAL_DINNER("MEAL_DINNER", Field.MEAL_DINNER),
        MEAL_SNACK("MEAL_SNACK", Field.MEAL_SNACK),

        TYPE_OF_RESISTANCE_UNKNOWN("TYPE_OF_RESISTANCE_UNKNOWN", Field.TYPE_OF_RESISTANCE_UNKNOWN),
        TYPE_OF_RESISTANCE_BARBELL("TYPE_OF_RESISTANCE_BARBELL", Field.TYPE_OF_RESISTANCE_BARBELL),
        TYPE_OF_RESISTANCE_CABLE("TYPE_OF_RESISTANCE_CABLE", Field.TYPE_OF_RESISTANCE_CABLE),
        TYPE_OF_RESISTANCE_DUMBBELL("TYPE_OF_RESISTANCE_DUMBBELL", Field.TYPE_OF_RESISTANCE_DUMBBELL),
        TYPE_OF_RESISTANCE_KETTLEBELL("TYPE_OF_RESISTANCE_KETTLEBELL", Field.TYPE_OF_RESISTANCE_KETTLEBELL),
        TYPE_OF_RESISTANCE_MACHINE("TYPE_OF_RESISTANCE_MACHINE", Field.TYPE_OF_RESISTANCE_MACHINE),
        TYPE_OF_RESISTANCE_BODY("TYPE_OF_RESISTANCE_BODY", Field.TYPE_OF_RESISTANCE_BODY),

        NUTRIENTS_FACTS_CALORIES("NUTRIENTS_FACTS_CALORIES", Field.NUTRIENTS_FACTS_CALORIES),
        NUTRIENTS_FACTS_TOTAL_FAT("NUTRIENTS_FACTS_TOTAL_FAT", Field.NUTRIENTS_FACTS_TOTAL_FAT),
        NUTRIENTS_FACTS_SATURATED_FAT("NUTRIENTS_FACTS_SATURATED_FAT", Field.NUTRIENTS_FACTS_SATURATED_FAT),
        NUTRIENTS_FACTS_UNSATURATED_FAT("NUTRIENTS_FACTS_UNSATURATED_FAT", Field.NUTRIENTS_FACTS_UNSATURATED_FAT),
        NUTRIENTS_FACTS_POLYUNSATURATED_FAT("NUTRIENTS_FACTS_POLYUNSATURATED_FAT", Field.NUTRIENTS_FACTS_POLYUNSATURATED_FAT),
        NUTRIENTS_FACTS_MONOUNSATURATED_FAT("NUTRIENTS_FACTS_MONOUNSATURATED_FAT", Field.NUTRIENTS_FACTS_MONOUNSATURATED_FAT),
        NUTRIENTS_FACTS_TRANS_FAT("NUTRIENTS_FACTS_TRANS_FAT", Field.NUTRIENTS_FACTS_TRANS_FAT),
        NUTRIENTS_FACTS_CHOLESTEROL("NUTRIENTS_FACTS_CHOLESTEROL", Field.NUTRIENTS_FACTS_CHOLESTEROL),
        NUTRIENTS_FACTS_SODIUM("NUTRIENTS_FACTS_SODIUM", Field.NUTRIENTS_FACTS_SODIUM),
        NUTRIENTS_FACTS_POTASSIUM("NUTRIENTS_FACTS_POTASSIUM", Field.NUTRIENTS_FACTS_POTASSIUM),
        NUTRIENTS_FACTS_TOTAL_CARBS("NUTRIENTS_FACTS_TOTAL_CARBS", Field.NUTRIENTS_FACTS_TOTAL_CARBS),
        NUTRIENTS_FACTS_DIETARY_FIBER("NUTRIENTS_FACTS_DIETARY_FIBER", Field.NUTRIENTS_FACTS_DIETARY_FIBER),
        NUTRIENTS_FACTS_SUGAR("NUTRIENTS_FACTS_SUGAR", Field.NUTRIENTS_FACTS_SUGAR),
        NUTRIENTS_FACTS_PROTEIN("NUTRIENTS_FACTS_PROTEIN", Field.NUTRIENTS_FACTS_PROTEIN),
        NUTRIENTS_FACTS_VITAMIN_A("NUTRIENTS_FACTS_VITAMIN_A", Field.NUTRIENTS_FACTS_VITAMIN_A),
        NUTRIENTS_FACTS_VITAMIN_C("NUTRIENTS_FACTS_VITAMIN_C", Field.NUTRIENTS_FACTS_VITAMIN_C),
        NUTRIENTS_FACTS_CALCIUM("NUTRIENTS_FACTS_CALCIUM", Field.NUTRIENTS_FACTS_CALCIUM),
        NUTRIENTS_FACTS_IRON("NUTRIENTS_FACTS_IRON", Field.NUTRIENTS_FACTS_IRON),

        BODY_POSTURE_STANDING("BODY_POSTURE_STANDING", HealthFields.BODY_POSTURE_STANDING),
        BODY_POSTURE_SITTING("BODY_POSTURE_SITTING", HealthFields.BODY_POSTURE_SITTING),
        BODY_POSTURE_LYING_DOWN("BODY_POSTURE_LYING_DOWN", HealthFields.BODY_POSTURE_LYING_DOWN),
        BODY_POSTURE_SEMI_RECUMBENT("BODY_POSTURE_SEMI_RECUMBENT", HealthFields.BODY_POSTURE_SEMI_RECUMBENT),

        MEASURE_BODY_PART_OF_BLOOD_PRESSURE_LEFT_WRIST("MEASURE_BODY_PART_OF_BLOOD_PRESSURE_LEFT_WRIST", HealthFields.MEASURE_BODY_PART_OF_BLOOD_PRESSURE_LEFT_WRIST),
        MEASURE_BODY_PART_OF_BLOOD_PRESSURE_RIGHT_WRIST("MEASURE_BODY_PART_OF_BLOOD_PRESSURE_RIGHT_WRIST", HealthFields.MEASURE_BODY_PART_OF_BLOOD_PRESSURE_RIGHT_WRIST),
        MEASURE_BODY_PART_OF_BLOOD_PRESSURE_LEFT_UPPER_ARM("MEASURE_BODY_PART_OF_BLOOD_PRESSURE_LEFT_UPPER_ARM", HealthFields.MEASURE_BODY_PART_OF_BLOOD_PRESSURE_LEFT_UPPER_ARM),
        MEASURE_BODY_PART_OF_BLOOD_PRESSURE_RIGHT_UPPER_ARM("MEASURE_BODY_PART_OF_BLOOD_PRESSURE_RIGHT_UPPER_ARM", HealthFields.MEASURE_BODY_PART_OF_BLOOD_PRESSURE_RIGHT_UPPER_ARM),

        MEASURE_TIME_RANDOM_TIME("MEASURE_TIME_RANDOM_TIME", HealthFields.MEASURE_TIME_RANDOM_TIME),
        MEASURE_TIME_BEFORE_BREAKFAST("MEASURE_TIME_BEFORE_BREAKFAST", HealthFields.MEASURE_TIME_BEFORE_BREAKFAST),
        MEASURE_TIME_AFTER_BREAKFAST("MEASURE_TIME_AFTER_BREAKFAST", HealthFields.MEASURE_TIME_AFTER_BREAKFAST),
        MEASURE_TIME_BEFORE_LUNCH("MEASURE_TIME_BEFORE_LUNCH", HealthFields.MEASURE_TIME_BEFORE_LUNCH),
        MEASURE_TIME_AFTER_LUNCH("MEASURE_TIME_AFTER_LUNCH", HealthFields.MEASURE_TIME_AFTER_LUNCH),
        MEASURE_TIME_BEFORE_DINNER("MEASURE_TIME_BEFORE_DINNER", HealthFields.MEASURE_TIME_BEFORE_DINNER),
        MEASURE_TIME_AFTER_DINNER("MEASURE_TIME_AFTER_DINNER", HealthFields.MEASURE_TIME_AFTER_DINNER),
        MEASURE_TIME_BEFORE_SLEEP("MEASURE_TIME_BEFORE_SLEEP", HealthFields.MEASURE_TIME_BEFORE_SLEEP),
        MEASURE_TIME_BEFORE_DAWN("MEASURE_TIME_BEFORE_DAWN", HealthFields.MEASURE_TIME_BEFORE_DAWN),

        FIELD_CORRELATION_WITH_MEALTIME_GENERAL("FIELD_CORRELATION_WITH_MEALTIME_GENERAL", HealthFields.FIELD_CORRELATION_WITH_MEALTIME_GENERAL),
        FIELD_CORRELATION_WITH_MEALTIME_FASTING("FIELD_CORRELATION_WITH_MEALTIME_FASTING", HealthFields.FIELD_CORRELATION_WITH_MEALTIME_FASTING),
        FIELD_CORRELATION_WITH_MEALTIME_BEFORE_MEAL("FIELD_CORRELATION_WITH_MEALTIME_BEFORE_MEAL", HealthFields.FIELD_CORRELATION_WITH_MEALTIME_BEFORE_MEAL),
        FIELD_CORRELATION_WITH_MEALTIME_AFTER_MEAL("FIELD_CORRELATION_WITH_MEALTIME_AFTER_MEAL", HealthFields.FIELD_CORRELATION_WITH_MEALTIME_AFTER_MEAL),

        CORRELATION_WITH_SLEEP_STATE_FULLY_AWAKE("CORRELATION_WITH_SLEEP_STATE_FULLY_AWAKE", HealthFields.CORRELATION_WITH_SLEEP_STATE_FULLY_AWAKE),
        CORRELATION_WITH_SLEEP_STATE_BEFORE_SLEEP("CORRELATION_WITH_SLEEP_STATE_BEFORE_SLEEP", HealthFields.CORRELATION_WITH_SLEEP_STATE_BEFORE_SLEEP),
        CORRELATION_WITH_SLEEP_STATE_ON_WAKING("CORRELATION_WITH_SLEEP_STATE_ON_WAKING", HealthFields.CORRELATION_WITH_SLEEP_STATE_ON_WAKING),
        CORRELATION_WITH_SLEEP_STATE_DURING_SLEEP("CORRELATION_WITH_SLEEP_STATE_DURING_SLEEP", HealthFields.CORRELATION_WITH_SLEEP_STATE_DURING_SLEEP),

        SAMPLE_SOURCE_INTERSTITIAL_FLUID("SAMPLE_SOURCE_INTERSTITIAL_FLUID", HealthFields.SAMPLE_SOURCE_INTERSTITIAL_FLUID),
        SAMPLE_SOURCE_CAPILLARY_BLOOD("SAMPLE_SOURCE_CAPILLARY_BLOOD", HealthFields.SAMPLE_SOURCE_CAPILLARY_BLOOD),
        SAMPLE_SOURCE_PLASMA("SAMPLE_SOURCE_PLASMA", HealthFields.SAMPLE_SOURCE_PLASMA),
        SAMPLE_SOURCE_SERUM("SAMPLE_SOURCE_SERUM", HealthFields.SAMPLE_SOURCE_SERUM),
        SAMPLE_SOURCE_TEARS("SAMPLE_SOURCE_TEARS", HealthFields.SAMPLE_SOURCE_TEARS),
        SAMPLE_SOURCE_WHOLE_BLOOD("SAMPLE_SOURCE_WHOLE_BLOOD", HealthFields.SAMPLE_SOURCE_WHOLE_BLOOD),

        OXYGEN_THERAPY_NASAL_CANULA("OXYGEN_THERAPY_NASAL_CANULA", HealthFields.OXYGEN_THERAPY_NASAL_CANULA),

        SPO2_MEASUREMENT_MECHANISM_PERIPHERAL_CAPILLARY("SPO2_MEASUREMENT_MECHANISM_PERIPHERAL_CAPILLARY", HealthFields.SPO2_MEASUREMENT_MECHANISM_PERIPHERAL_CAPILLARY),

        SPO2_MEASUREMENT_APPROACH_PULSE_OXIMETRY("SPO2_MEASUREMENT_APPROACH_PULSE_OXIMETRY", HealthFields.SPO2_MEASUREMENT_APPROACH_PULSE_OXIMETRY),

        MEASURE_BODY_PART_OF_TEMPERATURE_AXILLARY("MEASURE_BODY_PART_OF_TEMPERATURE_AXILLARY", HealthFields.MEASURE_BODY_PART_OF_TEMPERATURE_AXILLARY),
        MEASURE_BODY_PART_OF_TEMPERATURE_FINGER("MEASURE_BODY_PART_OF_TEMPERATURE_FINGER", HealthFields.MEASURE_BODY_PART_OF_TEMPERATURE_FINGER),
        MEASURE_BODY_PART_OF_TEMPERATURE_FOREHEAD("MEASURE_BODY_PART_OF_TEMPERATURE_FOREHEAD", HealthFields.MEASURE_BODY_PART_OF_TEMPERATURE_FOREHEAD),
        MEASURE_BODY_PART_OF_TEMPERATURE_ORAL("MEASURE_BODY_PART_OF_TEMPERATURE_ORAL", HealthFields.MEASURE_BODY_PART_OF_TEMPERATURE_ORAL),
        MEASURE_BODY_PART_OF_TEMPERATURE_RECTAL("MEASURE_BODY_PART_OF_TEMPERATURE_RECTAL", HealthFields.MEASURE_BODY_PART_OF_TEMPERATURE_RECTAL),
        MEASURE_BODY_PART_OF_TEMPERATURE_TEMPORAL_ARTERY("MEASURE_BODY_PART_OF_TEMPERATURE_TEMPORAL_ARTERY", HealthFields.MEASURE_BODY_PART_OF_TEMPERATURE_TEMPORAL_ARTERY),
        MEASURE_BODY_PART_OF_TEMPERATURE_TOE("MEASURE_BODY_PART_OF_TEMPERATURE_TOE", HealthFields.MEASURE_BODY_PART_OF_TEMPERATURE_TOE),
        MEASURE_BODY_PART_OF_TEMPERATURE_TYMPANIC("MEASURE_BODY_PART_OF_TEMPERATURE_TYMPANIC", HealthFields.MEASURE_BODY_PART_OF_TEMPERATURE_TYMPANIC),
        MEASURE_BODY_PART_OF_TEMPERATURE_WRIST("MEASURE_BODY_PART_OF_TEMPERATURE_WRIST", HealthFields.MEASURE_BODY_PART_OF_TEMPERATURE_WRIST),
        MEASURE_BODY_PART_OF_TEMPERATURE_VAGINAL("MEASURE_BODY_PART_OF_TEMPERATURE_VAGINAL", HealthFields.MEASURE_BODY_PART_OF_TEMPERATURE_VAGINAL),

        TEXTURE_DRY("TEXTURE_DRY", HealthFields.TEXTURE_DRY),
        TEXTURE_STICKY("TEXTURE_STICKY", HealthFields.TEXTURE_STICKY),
        TEXTURE_CREAMY("TEXTURE_CREAMY", HealthFields.TEXTURE_CREAMY),
        TEXTURE_WATERY("TEXTURE_WATERY", HealthFields.TEXTURE_WATERY),
        TEXTURE_EGG_WHITE("TEXTURE_EGG_WHITE", HealthFields.TEXTURE_EGG_WHITE),

        AMOUNT_LIGHT("AMOUNT_LIGHT", HealthFields.AMOUNT_LIGHT),
        AMOUNT_MEDIUM("AMOUNT_MEDIUM", HealthFields.AMOUNT_MEDIUM),
        AMOUNT_HEAVY("AMOUNT_HEAVY", HealthFields.AMOUNT_HEAVY),

        POSITION_LOW("POSITION_LOW", HealthFields.POSITION_LOW),
        POSITION_MEDIUM("POSITION_MEDIUM", HealthFields.POSITION_MEDIUM),
        POSITION_HIGH("POSITION_HIGH", HealthFields.POSITION_HIGH),

        DILATION_STATUS_CLOSED("DILATION_STATUS_CLOSED", HealthFields.DILATION_STATUS_CLOSED),
        DILATION_STATUS_MEDIUM("DILATION_STATUS_MEDIUM", HealthFields.DILATION_STATUS_MEDIUM),
        DILATION_STATUS_OPEN("DILATION_STATUS_OPEN", HealthFields.DILATION_STATUS_OPEN),

        FIRMNESS_LEVEL_SOFT("FIRMNESS_LEVEL_SOFT", HealthFields.FIRMNESS_LEVEL_SOFT),
        FIRMNESS_LEVEL_MEDIUM("FIRMNESS_LEVEL_MEDIUM", HealthFields.FIRMNESS_LEVEL_MEDIUM),
        FIRMNESS_LEVEL_FIRM("FIRMNESS_LEVEL_FIRM", HealthFields.FIRMNESS_LEVEL_FIRM),

        VOLUME_SPOTTING("VOLUME_SPOTTING", HealthFields.VOLUME_SPOTTING),
        VOLUME_LIGHT("VOLUME_LIGHT", HealthFields.VOLUME_LIGHT),
        VOLUME_MEDIUM("VOLUME_MEDIUM", HealthFields.VOLUME_MEDIUM),
        VOLUME_HEAVY("VOLUME_HEAVY", HealthFields.VOLUME_HEAVY),

        DETECTION_RESULT_NEGATIVE("DETECTION_RESULT_NEGATIVE", HealthFields.DETECTION_RESULT_NEGATIVE),
        DETECTION_RESULT_POSITIVE("DETECTION_RESULT_POSITIVE", HealthFields.DETECTION_RESULT_POSITIVE),

        //Group Types
        TYPE_TIME("TYPE_TIME", Group.TYPE_TIME),
        TYPE_INTERVALS("TYPE_INTERVALS", Group.TYPE_INTERVALS);


        private final String enumName;
        private final Object enumValue;

        FieldValueEnums(String enumName, Object enumValue) {
            this.enumName = enumName;
            this.enumValue = enumValue;
        }

        public String getEnumName() {
            return enumName;
        }

        public Object getEnumValue() {
            return enumValue;
        }

        public static FieldValueEnums fromString(String text) {
            for (FieldValueEnums variable : FieldValueEnums.values()) {
                if (variable.enumName.equalsIgnoreCase(text)) {
                    return variable;
                }
            }
            return null;
        }

    }

    /**
     * whole field constant variables as Map
     **/
    Map<String, Object> FIELD_VALUE_ENUMS_MAP = initFieldValueEnums();

    /**
     * Initializes Field Type Constants map.
     *
     * @return Map<String, Object> Field Type Constants map
     */
    static Map<String, Object> initFieldValueEnums() {
        Map<String, Object> constantMap = new HashMap<>();
        for (FieldValueEnums variable : EnumSet.allOf(FieldValueEnums.class)) {
            String key = variable.getEnumName();
            Object value = variable.getEnumValue();
            constantMap.put(key, value);
        }
        return Collections.unmodifiableMap(constantMap);
    }

    enum SleepStateConstants {
        SLEEP_LIGHT("SLEEP_LIGHT", SleepState.SLEEP_LIGHT),
        SLEEP_DREAM("SLEEP_DREAM", SleepState.SLEEP_DREAM),
        SLEEP_DEEP("SLEEP_DEEP", SleepState.SLEEP_DEEP),
        SLEEP_AWAKE("SLEEP_AWAKE", SleepState.SLEEP_AWAKE),
        SLEEP_NAP("SLEEP_NAP", SleepState.SLEEP_NAP);

        private final String name;
        private final int value;

        SleepStateConstants(String name, int value) {
            this.name = name;
            this.value = value;
        }

        public String getName() {
            return name;
        }

        public int getValue() {
            return value;
        }

        public static SleepStateConstants fromString(String text) {
            for (SleepStateConstants variable : SleepStateConstants.values()) {
                if (variable.name.equalsIgnoreCase(text)) {
                    return variable;
                }
            }
            return null;
        }

    }

    /**
     * whole SleepState constant variables as Map
     **/
    Map<String, Object> SLEEP_STATE_CONSTANTS = initSleepStateConstants();

    /**
     * Initializes SleepState Constants map.
     *
     * @return Map<String, Object> SleepState Constants map
     */
    static Map<String, Object> initSleepStateConstants() {
        Map<String, Object> constantMap = new HashMap<>();
        for (SleepStateConstants variable : EnumSet.allOf(SleepStateConstants.class)) {
            String key = variable.getName();
            int value = variable.getValue();
            constantMap.put(key, value);
        }
        return Collections.unmodifiableMap(constantMap);
    }

    enum DataCollectorConstants {
        DATA_TYPE_CLEAN("DATA_TYPE_CLEAN", DataCollector.DATA_TYPE_CLEAN),
        DATA_TYPE_CONVERTED("DATA_TYPE_CONVERTED", DataCollector.DATA_TYPE_CONVERTED),
        DATA_TYPE_MERGED("DATA_TYPE_MERGED", DataCollector.DATA_TYPE_MERGED),
        DATA_TYPE_POLYMERIZED("DATA_TYPE_POLYMERIZED", DataCollector.DATA_TYPE_POLYMERIZED),
        DATA_TYPE_DERIVED("DATA_TYPE_DERIVED", DataCollector.DATA_TYPE_DERIVED),
        DATA_TYPE_INIT("DATA_TYPE_INIT", DataCollector.DATA_TYPE_INIT),
        DATA_TYPE_RAW("DATA_TYPE_RAW", DataCollector.DATA_TYPE_RAW),
        HEALTH_DATA_QUALITY_BLOOD_PRESSURE_ESH2002("HEALTH_DATA_QUALITY_BLOOD_PRESSURE_ESH2002", DataCollector.HEALTH_DATA_QUALITY_BLOOD_PRESSURE_ESH2002),
        HEALTH_DATA_QUALITY_BLOOD_PRESSURE_ESH2010("HEALTH_DATA_QUALITY_BLOOD_PRESSURE_ESH2010", DataCollector.HEALTH_DATA_QUALITY_BLOOD_PRESSURE_ESH2010),
        HEALTH_DATA_QUALITY_BLOOD_PRESSURE_AAMI("HEALTH_DATA_QUALITY_BLOOD_PRESSURE_AAMI", DataCollector.HEALTH_DATA_QUALITY_BLOOD_PRESSURE_AAMI),
        HEALTH_DATA_QUALITY_BLOOD_PRESSURE_BHS_A_A("HEALTH_DATA_QUALITY_BLOOD_PRESSURE_BHS_A_A", DataCollector.HEALTH_DATA_QUALITY_BLOOD_PRESSURE_BHS_A_A),
        HEALTH_DATA_QUALITY_BLOOD_PRESSURE_BHS_A_B("HEALTH_DATA_QUALITY_BLOOD_PRESSURE_BHS_A_B", DataCollector.HEALTH_DATA_QUALITY_BLOOD_PRESSURE_BHS_A_B),
        HEALTH_DATA_QUALITY_BLOOD_PRESSURE_BHS_B_A("HEALTH_DATA_QUALITY_BLOOD_PRESSURE_BHS_B_A", DataCollector.HEALTH_DATA_QUALITY_BLOOD_PRESSURE_BHS_B_A),
        HEALTH_DATA_QUALITY_BLOOD_PRESSURE_BHS_B_B("HEALTH_DATA_QUALITY_BLOOD_PRESSURE_BHS_B_B", DataCollector.HEALTH_DATA_QUALITY_BLOOD_PRESSURE_BHS_B_B),
        HEALTH_DATA_QUALITY_BLOOD_GLUCOSE_ISO151972003("HEALTH_DATA_QUALITY_BLOOD_GLUCOSE_ISO151972003", DataCollector.HEALTH_DATA_QUALITY_BLOOD_GLUCOSE_ISO151972003),
        HEALTH_DATA_QUALITY_BLOOD_GLUCOSE_ISO151972013("HEALTH_DATA_QUALITY_BLOOD_GLUCOSE_ISO151972013", DataCollector.HEALTH_DATA_QUALITY_BLOOD_GLUCOSE_ISO151972013);


        private final String name;
        private final int value;

        DataCollectorConstants(String name, int value) {
            this.name = name;
            this.value = value;
        }

        public String getName() {
            return name;
        }

        public int getValue() {
            return value;
        }

        public static DataCollectorConstants fromString(String text) {
            for (DataCollectorConstants variable : DataCollectorConstants.values()) {
                if (variable.name.equalsIgnoreCase(text)) {
                    return variable;
                }
            }
            return null;
        }

    }

    /**
     * whole DataCollectorConstants constant variables as Map
     **/
    Map<String, Object> DATA_COLLECTOR_CONSTANTS = initDataCollectorConstants();

    /**
     * Initializes DataCollectorConstants map.
     *
     * @return Map<String, Object> DataCollectorConstants map
     */
    static Map<String, Object> initDataCollectorConstants() {
        Map<String, Object> constantMap = new HashMap<>();
        for (DataCollectorConstants variable : EnumSet.allOf(DataCollectorConstants.class)) {
            String key = variable.getName();
            int value = variable.getValue();
            constantMap.put(key, value);
        }
        return Collections.unmodifiableMap(constantMap);
    }

}
